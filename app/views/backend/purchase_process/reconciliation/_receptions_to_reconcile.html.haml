= hidden_field_tag 'purchase-orders', false

.modal-body
  .purchase-orders
    .list-headers
      %span.list-header.form-name= :reception.tl
      %span.list-header
      %span.list-header= :quantity.tl
      %span.list-header= :conditioning.tl
      %span.list-header= :unit_amount.tl
      %span.list-header= :total_amount_without_taxes.tl
    .list-models
      - models.each do |model|
        .model
          = check_box_tag('', '1', false, class: 'model-checkbox', data: { id: model.id })

          - reference_number = model.reference_number.present? ? reference_number : :not_informed.tl
          %span.model-ref= :reception_number_with_reference.tl(reference_number: reference_number)
          %br
          %span.model-ref.reception-date= :reception_date.tl(date: l(model.given_at.to_date))

          %ul.list-items
            - model.items.each do |model_item|
              - next if model_item.purchase_invoice_item

              - datas = { variant_type: model_item.variant.variety, equipment_id: model_item.equipment_id, activity_budget_id: model_item.activity_budget_id, team_id: model_item.team_id, responsible_id: model.responsible_id, project_budget_id: model_item.project_budget_id, annotation: model_item.annotation, tax_id: model_item.purchase_order_item.try(:tax_id), reduction_percentage: model_item.purchase_order_item.try(:reduction_percentage), non_compliant: model_item.non_compliant.to_s, supplier_ref: reference_number }

              - if model_item.storings.any?
                - model_item.storings.group_by { |s| s.conditioning_unit_id }.each do |unit_id, storings|
                  - datas[:conditioning_unit_id] = unit_id
                  - datas[:conditioning_quantity] = storings.map(&:conditioning_quantity).sum

                  %li.item{ data: datas }
                    = check_box_tag('', '1', false, class: 'item-checkbox', data: { id: model_item.id })
                    %span.variant{ data: { id: model_item.variant_id } }= model_item.variant.name
                    %span.item-value
                    %span.item-value.quantity-to-fill= datas[:conditioning_quantity]
                    %span.item-value= Unit.find(unit_id).name
                    %span.item-value.unit-cost= model_item.unit_pretax_amount if model_item.purchase_order_item&.conditioning_unit_id == unit_id
                    %span.item-value.total-except-taxes= model_item.pretax_amount if model_item.purchase_order_item&.conditioning_unit_id == unit_id

              - else
                - conditioning_unit = model_item.conditioning_unit || model_item.guess_conditioning[:unit]
                - conditioning_quantity = model_item.conditioning_quantity || model_item.guess_conditioning[:quantity]
                - datas.merge!({ conditioning_unit_id: conditioning_unit.id, conditionning_quantity: conditioning_quantity })

                %li.item{ data: datas }
                  = check_box_tag('', '1', false, class: 'item-checkbox', data: { id: model_item.id })
                  %span.variant{ data: { id: model_item.variant_id } }= model_item.variant.name
                  %span.item-value
                  %span.item-value= conditioning_unit.name
                  %span.item-value.quantity-to-fill= conditioning_quantity
                  %span.item-value.unit-cost= model_item.unit_pretax_amount
                  %span.item-value.total-except-taxes= model_item.purchase_order_item.try(:pretax_amount)

.modal-footer
  .actions
    %button{ class: "btn btn-default valid-modal" }= :valid.tl
